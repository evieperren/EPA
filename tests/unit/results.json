{"numFailedTestSuites":2,"numFailedTests":2,"numPassedTestSuites":3,"numPassedTests":26,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":5,"numTotalTests":28,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1595431111256,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Get Employee by Employee ID"],"failureMessages":[],"fullName":"Get Employee by Employee ID should be defined","location":null,"status":"passed","title":"should be defined"},{"ancestorTitles":["Get Employee by Employee ID"],"failureMessages":[],"fullName":"Get Employee by Employee ID should return Employee by Employee ID","location":null,"status":"passed","title":"should return Employee by Employee ID"},{"ancestorTitles":["Get Employee by Employee ID"],"failureMessages":[],"fullName":"Get Employee by Employee ID should fail with incorrect id passed into findById","location":null,"status":"passed","title":"should fail with incorrect id passed into findById"},{"ancestorTitles":["Get Employee by Employee ID"],"failureMessages":[],"fullName":"Get Employee by Employee ID should throw an error if no employee is found","location":null,"status":"passed","title":"should throw an error if no employee is found"},{"ancestorTitles":["Get Employee by Employee ID"],"failureMessages":["TypeError: Cannot read property 'forEach' of undefined\n    at Object.<anonymous> (/Users/sh/Desktop/EPA/tests/unit/get-by-employee-id/get-by-id.test.js:32:29)\n    at Object.asyncJestTest (/Users/sh/Desktop/EPA/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /Users/sh/Desktop/EPA/node_modules/jest-jasmine2/build/queueRunner.js:47:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/sh/Desktop/EPA/node_modules/jest-jasmine2/build/queueRunner.js:30:19)\n    at /Users/sh/Desktop/EPA/node_modules/jest-jasmine2/build/queueRunner.js:77:41\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)"],"fullName":"Get Employee by Employee ID should have increase counter value in each call","location":null,"status":"failed","title":"should have increase counter value in each call"},{"ancestorTitles":["Get Employee by Employee ID"],"failureMessages":[],"fullName":"Get Employee by Employee ID should send a welcome message when a successful request is made","location":null,"status":"passed","title":"should send a welcome message when a successful request is made"}],"endTime":1595431112762,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGet Employee by Employee ID › should have increase counter value in each call\u001b[39m\u001b[22m\n\n    TypeError: Cannot read property 'forEach' of undefined\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m  it(\u001b[32m'should have increase counter value in each call'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 31 | \u001b[39m    let counter \u001b[33m=\u001b[39m \u001b[35m0\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 32 | \u001b[39m    \u001b[36mconst\u001b[39m counterIncrease \u001b[33m=\u001b[39m jest\u001b[33m.\u001b[39mfn(() \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 33 | \u001b[39m      counter\u001b[33m++\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 35 | \u001b[39m    [\u001b[35m0\u001b[39m\u001b[33m,\u001b[39m\u001b[35m1\u001b[39m]\u001b[33m.\u001b[39mforEach(() \u001b[33m=>\u001b[39m counterIncrease())\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/get-by-employee-id/get-by-id.test.js\u001b[39m\u001b[0m\u001b[2m:32:29)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/sh/Desktop/EPA/tests/unit/get-by-employee-id/get-by-id.test.js","startTime":1595431111561,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Update employee test suite"],"failureMessages":[],"fullName":"Update employee test suite should be defined","location":null,"status":"passed","title":"should be defined"},{"ancestorTitles":["Update employee test suite"],"failureMessages":[],"fullName":"Update employee test suite should return a single employee by employee ID","location":null,"status":"passed","title":"should return a single employee by employee ID"},{"ancestorTitles":["Update employee test suite"],"failureMessages":["TypeError: Cannot read property 'name' of undefined\n    at Object.<anonymous> (/Users/sh/Desktop/EPA/tests/unit/update/update.test.js:27:19)\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)"],"fullName":"Update employee test suite should update name by employee ID","location":null,"status":"failed","title":"should update name by employee ID"},{"ancestorTitles":["Update employee test suite"],"failureMessages":[],"fullName":"Update employee test suite should throw an error if the given ID does not exist","location":null,"status":"passed","title":"should throw an error if the given ID does not exist"},{"ancestorTitles":["Update employee test suite"],"failureMessages":[],"fullName":"Update employee test suite should send message \"Ok\" when a successful request has been made","location":null,"status":"passed","title":"should send message \"Ok\" when a successful request has been made"},{"ancestorTitles":["Update employee test suite"],"failureMessages":[],"fullName":"Update employee test suite should throw an error if validation has failed","location":null,"status":"passed","title":"should throw an error if validation has failed"}],"endTime":1595431112906,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUpdate employee test suite › should update name by employee ID\u001b[39m\u001b[22m\n\n    TypeError: Cannot read property 'name' of undefined\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 | \u001b[39m    mockingoose(\u001b[33mEmployee\u001b[39m)\u001b[33m.\u001b[39mtoReturn(returnedEmployee\u001b[33m,\u001b[39m \u001b[32m'findOne'\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 26 | \u001b[39m    \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m await  \u001b[33mEmployee\u001b[39m\u001b[33m.\u001b[39mupdate({ name\u001b[33m:\u001b[39m { first\u001b[33m:\u001b[39m \u001b[32m'changed'\u001b[39m} })\u001b[33m.\u001b[39mwhere({ employeeID\u001b[33m:\u001b[39m \u001b[32m'0efy65d68jgt543t'\u001b[39m })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 27 | \u001b[39m    expect(result\u001b[33m.\u001b[39mname)\u001b[33m.\u001b[39mtoBe(\u001b[32m'changed'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 28 | \u001b[39m  })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 | \u001b[39m  it(\u001b[32m'should throw an error if the given ID does not exist'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m    mockingoose(\u001b[33mEmployee\u001b[39m)\u001b[33m.\u001b[39mtoReturn(returnedEmployee\u001b[33m,\u001b[39m \u001b[32m'findOne'\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/update/update.test.js\u001b[39m\u001b[0m\u001b[2m:27:19)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/sh/Desktop/EPA/tests/unit/update/update.test.js","startTime":1595431111562,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Get all Employees test suite"],"failureMessages":[],"fullName":"Get all Employees test suite should be defined","location":null,"status":"passed","title":"should be defined"},{"ancestorTitles":["Get all Employees test suite"],"failureMessages":[],"fullName":"Get all Employees test suite should return an array of employees","location":null,"status":"passed","title":"should return an array of employees"},{"ancestorTitles":["Get all Employees test suite"],"failureMessages":[],"fullName":"Get all Employees test suite should return error message when no employees are found","location":null,"status":"passed","title":"should return error message when no employees are found"},{"ancestorTitles":["Get all Employees test suite"],"failureMessages":[],"fullName":"Get all Employees test suite should return employees with low balance","location":null,"status":"passed","title":"should return employees with low balance"},{"ancestorTitles":["Get all Employees test suite"],"failureMessages":[],"fullName":"Get all Employees test suite should return error message when no employees with less than £2.00 are found","location":null,"status":"passed","title":"should return error message when no employees with less than £2.00 are found"}],"endTime":1595431113315,"message":"","name":"/Users/sh/Desktop/EPA/tests/unit/get-all/get-all.test.js","startTime":1595431112782,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Delete Employee test suite"],"failureMessages":[],"fullName":"Delete Employee test suite should be defined","location":null,"status":"passed","title":"should be defined"},{"ancestorTitles":["Delete Employee test suite"],"failureMessages":[],"fullName":"Delete Employee test suite should find Employee by Employee ID","location":null,"status":"passed","title":"should find Employee by Employee ID"},{"ancestorTitles":["Delete Employee test suite"],"failureMessages":[],"fullName":"Delete Employee test suite should find a Employee and delete it by employeeID","location":null,"status":"passed","title":"should find a Employee and delete it by employeeID"},{"ancestorTitles":["Delete Employee test suite"],"failureMessages":[],"fullName":"Delete Employee test suite should send message when a successful request has been made","location":null,"status":"passed","title":"should send message when a successful request has been made"}],"endTime":1595431113476,"message":"","name":"/Users/sh/Desktop/EPA/tests/unit/delete/delete.test.js","startTime":1595431112934,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Create an Employee test suite"],"failureMessages":[],"fullName":"Create an Employee test suite should be defined","location":null,"status":"passed","title":"should be defined"},{"ancestorTitles":["Create an Employee test suite"],"failureMessages":[],"fullName":"Create an Employee test suite should create an Employee from a request body with the correct name","location":null,"status":"passed","title":"should create an Employee from a request body with the correct name"},{"ancestorTitles":["Create an Employee test suite"],"failureMessages":[],"fullName":"Create an Employee test suite should create an Employee from a request body with the correct contact details","location":null,"status":"passed","title":"should create an Employee from a request body with the correct contact details"},{"ancestorTitles":["Create an Employee test suite"],"failureMessages":[],"fullName":"Create an Employee test suite should create an Employee from a request body with the correct employeeID","location":null,"status":"passed","title":"should create an Employee from a request body with the correct employeeID"},{"ancestorTitles":["Create an Employee test suite"],"failureMessages":[],"fullName":"Create an Employee test suite should create an Employee from a request body with the correct account balance","location":null,"status":"passed","title":"should create an Employee from a request body with the correct account balance"},{"ancestorTitles":["Create an Employee test suite"],"failureMessages":[],"fullName":"Create an Employee test suite should throw an error if validation has failed","location":null,"status":"passed","title":"should throw an error if validation has failed"},{"ancestorTitles":["Create an Employee test suite"],"failureMessages":[],"fullName":"Create an Employee test suite should send message \"created\" when a successful request has been made","location":null,"status":"passed","title":"should send message \"created\" when a successful request has been made"}],"endTime":1595431113813,"message":"","name":"/Users/sh/Desktop/EPA/tests/unit/create/create.test.js","startTime":1595431113334,"status":"passed","summary":""}],"wasInterrupted":false}